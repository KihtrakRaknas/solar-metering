{"version":3,"sources":["components/Table.js","helperFunctions/prepDataForTable.js","components/NoData.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","arr","tableData","data","key","Object","keys","striped","borderless","small","columns","map","name","label","field","rows","NoData","App","useState","setData","useEffect","parse","comment","delimiter","err","output","console","error","className","style","padding","overflowX","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAIe,SAASA,EAAMC,GAAQ,ICJGC,EDIJ,ECI1B,CAACC,UAR6BD,EDKKD,EAAMG,KCGxBC,IAAKC,OAAOC,KAAKL,EAAI,KDHtCG,EAD0B,EAC1BA,IAAKF,EADqB,EACrBA,UAGZ,OACI,cAAC,IAAD,CACIK,SAAO,EACPC,YAAU,EAEVC,OAAK,EAGLN,KAAM,CACFO,QAAQN,EAAIO,KAAI,SAAAC,GAAI,MAAG,CAACC,MAAOD,EAAME,MAAMF,MAC3CG,KAAKb,KEhBN,SAASc,IACpB,OACI,gDCkCOC,MAhCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNf,EADM,KACAgB,EADA,KAqBb,OAFAC,qBAhBa,WAGXC,IAFa,kgOAEE,CACbC,QAAS,IACTC,UAAW,IACXb,SAAS,IACR,SAASc,EAAKC,GAEZD,EACDE,QAAQC,MAAMH,GAEdL,EAAQM,QAIG,EAAC,IAGhB,sBAAKG,UAAU,MAAf,UAEE,qBAAKC,MAAO,CAACC,QAAQ,GAAIC,UAAU,QAAnC,SACG5B,EAAK6B,OAAO,EAAE,cAACjC,EAAD,CAAOI,KAAMA,IAAQ,cAACa,EAAD,MAEtC,yCCrBSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c60485a1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport prepDataForTable from '../helperFunctions/prepDataForTable';\r\n\r\nexport default function Table(props) {\r\n    const {key, tableData} = prepDataForTable(props.data)\r\n    // console.log(tableData)\r\n    // console.log(props.data)\r\n    return (\r\n        <MDBDataTable\r\n            striped\r\n            borderless    \r\n            //responsive\r\n            small\r\n            //scrollX\r\n            \r\n            data={{\r\n                columns:key.map(name=>({label: name, field:name})),\r\n                rows:tableData\r\n            }}\r\n        />\r\n    )\r\n\r\n}","export default function prepDataForTable(arr) {\r\n    // const key = arr.shift()\r\n    // const tableData = arr.map(row=>{\r\n    //     let rowObj = {}\r\n    //     row.forEach((rowEl, index)=>rowObj[key[index]] = rowEl)\r\n    //     return rowObj\r\n    // })\r\n    // return {key, tableData}\r\n    return {tableData: arr, key: Object.keys(arr[0])}\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function NoData() {\r\n    return (\r\n        <h1>No data found!</h1>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport raw from \"raw.macro\";\nimport parse from 'csv-parse';\nimport Table from './components/Table';\nimport NoData from './components/NoData';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  let update = () => {\n    const logFile = raw(\"../please.csv\")//raw(\"C:/Program Files (x86)/Morningstar Corporation/MSView/please.csv\");\n    // Create the parser\n    parse(logFile, {\n      comment: '#',\n      delimiter: ',',\n      columns: true\n    }, function(err, output){\n      // console.log(output)\n      if(err)\n        console.error(err)\n      else\n        setData(output)\n    }) \n  }\n\n  useEffect(update,[true])\n\n  return (\n    <div className=\"App\">\n      \n      <div style={{padding:15, overflowX:\"auto\"}}>\n        {data.length>0?<Table data={data}/>:<NoData/>}\n      </div>\n      <p>test</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\n'bootstrap-css-only/css/bootstrap.min.css'; import\n'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}