{"version":3,"sources":["components/NoData.js","reportWebVitals.js","index.js","helperFunctions/globals.js","components/Table.js","helperFunctions/prepDataForTable.js","App.js","screens/FullTable.js","screens/HistoricalData.js","components/NavBar.js","components/Graph.js","screens/Home.js"],"names":["NoData","type","color","height","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","fileNames","Table","props","prepDataForTable","data","fields","key","tableData","console","log","reverse","striped","borderless","small","scrollX","hover","sortable","columns","rows","arr","forEach","row","timeKey","Date","toUTCString","Object","keys","filter","name","includes","map","label","split","join","replace","field","require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","err","db","firestore","useState","setData","firebaseTimestamp","setFirebaseTimestamp","getUTCFullYear","year","setYear","update","fetch","res","json","global","firebaseListener","catch","logFileRef","collection","doc","onSnapshot","timestamp","seconds","useEffect","setInterval","path","FullTable","setReverse","className","style","textAlign","padding","overflowX","length","filename","gradient","onClick","HistoricalData","documents","setDocuments","downloadLinks","setDownloadLinks","documentsLocal","unsubscribe","get","querySnapshot","id","push","caret","basic","el","a","JSONdata","blob","Blob","JSON","stringify","fileDownloadUrl","URL","createObjectURL","disabled","download","href","NavBar","lastWrite","setLastWrite","checkLastWrite","timeObj","diffInHrs","hours","Math","floor","days","recent","hoursFixed","toFixed","calcDiffInTime","expand","fixed","scrolling","backgroundColor","to","Graph","windowSize","undefined","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","traces","categories","category","getVsTime","x","y","mode","layout","title","xaxis","yaxis","yTitle","config","responsive","yAxis","Number","Home"],"mappings":"4LAGe,SAASA,IACpB,OACI,cAAC,IAAD,CAAcC,KAAK,OAAOC,MAAO,QAASC,OAAQ,IAAKC,MAAO,Q,sHCOvDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,gCCnBA,kCAAO,IAAMe,EAAY,CAAC,aAAa,e,4GCIxB,SAASC,EAAMC,GAAQ,IAAD,EACRC,YAAiBD,EAAME,KAAMF,EAAMG,QAArDC,EAD0B,EAC1BA,IAAKC,EADqB,EACrBA,UAEZ,OADAC,QAAQC,IAAIP,EAAMQ,SAEd,cAAC,IAAD,CACIC,SAAO,EACPC,YAAU,EAEVC,OAAK,EACLC,SAAO,EACPC,OAAK,EACLC,UAAU,EACVZ,KAAM,CACFa,QAAQX,EACRY,KAAKhB,EAAMQ,QAAQH,EAAU,YAAIA,GAAWG,e,gCClB7C,SAASP,EAAiBgB,EAAKd,GA8B1C,OAhBAc,EAAIC,SAAQ,SAAAC,GACR,IAAMC,EAAU,aAChBD,EAAIC,GAAW,IAAIC,KAAKF,EAAIC,IAAUE,iBAcnC,CACHjB,UAAWY,EACXb,IAbQmB,OAAOC,KAAKP,EAAI,IAC3BQ,QAAO,SAAAC,GAAI,OAAGvB,GAAYA,EAAOwB,SAASD,MAC1CE,KAAI,SAAAF,GAAI,MAAG,CACRG,MAAOH,EAAKI,MAAM,KAAKC,KAAK,KAAKC,QAAQ,eAAgB,+BACxDA,QAAQ,eAAgB,+BACxBA,QAAQ,YAAa,sBACrBA,QAAQ,cAAe,eACvBA,QAAQ,cAAe,eAExBC,MAAOP,OA5Bf,mC,+HCaAQ,EAAQ,KAER,IACEC,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAET,MAAOC,IAGT,IAAMC,EAAKT,IAASU,YAoDLlD,IAlDf,WAAgB,IAAD,EACWmD,mBAAS,IADpB,mBACN5C,EADM,KACA6C,EADA,OAEqCD,oBAAU,GAF/C,mBAENE,EAFM,KAEaC,EAFb,OAGWH,oBAAU,IAAIzB,MAAQ6B,kBAHjC,mBAGNC,EAHM,KAGAC,EAHA,KAKTC,EAAS,WACX/C,QAAQC,IAAI,aACZ+C,MAAM,iCAAiCpE,MAAK,SAAAqE,GAAG,OAAEA,EAAIC,UAAQtE,MAAK,SAAAgB,GAChEI,QAAQC,IAAIL,GACZ6C,EAAQ7C,GACLuD,EAAOC,mBACRD,EAAOC,mBACPD,EAAOC,iBAAmB,SAE3BC,OAAM,SAAAhB,GACP,GAA8B,MAA3Bc,EAAOC,iBAAyB,CACjC,IAAME,EAAahB,EAAGiB,WAAW,WAAWC,IAAI,GAAGX,GACnDM,EAAOC,iBAAmBE,EAAWG,YAAW,SAACD,GAC/Cf,EAAQe,EAAI5D,OAAOA,MACnBI,QAAQC,IAAIuD,EAAI5D,OAAO8D,UAAUC,SACjChB,EAAoD,IAA/Ba,EAAI5D,OAAO8D,UAAUC,YAG9C3D,QAAQC,IAAIoC,OAShB,OALAuB,qBAAU,WACRb,IACAc,YAAYd,EAAQ,OACnB,EAAC,IAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQL,kBAAmBA,EAAmBG,KAAMA,IAEpD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,KAAK,cAAZ,SACE,cAAC,IAAD,CAAWlE,KAAMA,MAEnB,cAAC,IAAD,CAAOkE,KAAK,mBAAZ,SACE,cAAC,IAAD,CAAgBjB,KAAMA,EAAMC,QAASA,MAEvC,cAAC,IAAD,CAAOgB,KAAK,IAAZ,SACE,cAAC,IAAD,CAAMlE,KAAMA,e,8IClEP,SAASmE,EAAT,GAA8B,IAATnE,EAAQ,EAARA,KAAQ,EACV4C,oBAAS,GADC,mBACjCtC,EADiC,KACxB8D,EADwB,KAExC,OACI,sBAAKC,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,oBAAIA,UAAU,YAAYC,MAAO,CAACC,UAAU,UAA5C,iDAGR,uBACA,sBAAKD,MAAO,CAAEE,QAAS,GAAIC,UAAW,QAAtC,UACKpD,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI9E,IAAU8B,KAAI,SAACiD,GAAD,OAAY,qCAAE,oBAAIN,UAAU,QAAQC,MAAO,CAAEC,UAAW,UAA1C,SAAuDI,IAAc,cAAC,IAAD,CAAO3E,KAAMA,EAAK2E,GAAWrE,QAASA,UAAiB,cAAC,IAAD,IACxL,qBAAKgE,MAAO,CAACC,UAAU,UAAvB,SACI,cAAC,IAAD,CAAQK,SAAUtE,EAAQ,QAAQ,SAAUuE,QAAS,kBAAIT,GAAY9D,IAArE,qC,6KCZL,SAASwE,EAAT,GAA4C,IAAlB7B,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EACpBN,mBAAS,IADW,mBAC/CmC,EAD+C,KACpCC,EADoC,OAEZpC,mBAAS,IAFG,mBAE/CqC,EAF+C,KAEhCC,EAFgC,KAkBtD,OAdAlB,qBAAU,WACN,IAAMtB,EAAKT,IAASU,YAChBwC,EAAiB,GACfC,EAAc1C,EAAGiB,WAAW,WAAW0B,MAAMrG,MAAK,SAACsG,GACrDA,EAActE,SAAQ,SAAC4C,GACnBxD,QAAQC,IAAIuD,EAAI2B,IAChBJ,EAAeK,KAAK5B,SAI5B,OADAoB,EAAaG,GACNC,IACT,IAIE,sBAAKf,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,oBAAIA,UAAU,YAAYC,MAAO,CAACC,UAAU,UAA5C,iCAGR,uBACA,sBAAKD,MAAO,CAAEE,QAAS,GAAIC,UAAW,QAAtC,UACI,4DAA+BxB,KAC/B,2EAA8CA,EAA9C,OACC8B,EAAUL,OAAS,EAAE,qCAClB,eAAC,IAAD,WACI,cAAC,IAAD,CAAmBe,OAAK,EAAC/G,MAAM,UAA/B,uBAGA,cAAC,IAAD,CAAiBgH,OAAK,EAAtB,SACK,YAAKX,GAAYrD,KAAI,SAAAiE,GAAE,OAAE,cAAC,IAAD,CAAiBd,QAAS,kBAAI3B,EAAQyC,EAAGJ,KAAzC,SAA+CI,EAAGJ,aAGpF,uBAAK,uBAAK,uBACV,iDACC,YAAKR,GAAYrD,KAAI,SAAAiE,GAUlB,OAT2B,MAAxBV,EAAcU,EAAGJ,KAChB,sBAAC,gCAAAK,EAAA,sDACSC,EAAWF,EAAG3F,OACd8F,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUJ,IAAY,CAACpH,KAAK,qBAClDyH,EAAkBC,IAAIC,gBAAgBN,GAC5C1F,QAAQC,IAAI6F,GACZhB,EAAiB,2BAAID,GAAL,kBAAqBU,EAAGJ,GAAKW,KALhD,0CAAD,GAQI,cAAC,IAAD,CAAQG,SAAkC,MAAxBpB,EAAcU,EAAGJ,IAAae,SAAUX,EAAGJ,GAAG,QAASgB,KAAMtB,EAAcU,EAAGJ,IAAhG,SAA8H,MAAxBN,EAAcU,EAAGJ,IAAY,aAAaI,EAAGJ,WAE/J,cAAC,IAAD,Y,oGC3DL,SAASiB,EAAT,GAA8C,IAA5B1D,EAA2B,EAA3BA,kBAAmBG,EAAQ,EAARA,KAAQ,EACtBL,mBAAS,MADa,mBACjD6D,EADiD,KACtCC,EADsC,KAGlDC,EAAiB,WACnBvD,MAAM,oCAAoCpE,MAAK,SAAAqE,GAAG,OAAEA,EAAIC,UAAQtE,MAAK,SAAAgB,GACjEI,QAAQC,IAAR,sBAA2BL,EAAKyG,YAChCC,EAAa1G,EAAKyG,cACnBhD,OAAM,SAAAhB,GACLrC,QAAQC,IAAIoC,OAIpBuB,qBAAU,WACN2C,IACA1C,YAAY0C,EAAgB,OAC7B,EAAC,IAEJ,IAMIC,EANmB,SAAC9C,GACpB,IACM+C,GADQ,IAAI1F,KAAU2C,GACL,KACvB,MAAO,CAACgD,MAAOC,KAAKC,MAAMH,EAAY,IAAKI,KAAMF,KAAKC,MAAMH,EAAU,IAAKK,OAAQL,EAAU,EAAGM,YAAaN,EAAY,IAAIO,QAAQ,IAG3HC,EAA6B,GAAdZ,GAAgC,MAAbA,EAAmBA,EAAY3D,GAE/E,OACI,qCACI,8BACI,eAAC,IAAD,CAAWpE,MAAM,OAAO4I,OAAO,KAAKC,MAAM,MAAMC,WAAS,EAAClD,MAAO,CAACmD,gBAAgB,SAAlF,UACI,cAAC,IAAD,UACI,wBAAQpD,UAAU,aAAlB,8BAEJ,cAAC,IAAD,CAAYqD,GAAG,QAAf,oBACA,cAAC,IAAD,CAAYA,GAAG,cAAf,yBACuB,GAAtB5E,GAA2B,eAAC,IAAD,CAAY4E,GAAG,mBAAf,8BAAoD,IAAIvG,MAAQ6B,kBAAoBC,EAAjC,WAA0CA,EAA1C,WAC/E,qBAAKoB,UAAU,UAAf,SACkB,MAAboC,GACiB,GAAdA,EAAA,+BAGIG,EAAQM,OAAR,0DAGuBN,EAAQE,MAH/B,sBAGkDF,EAAQK,KAH1D,cAKkB,GAAtBnE,EAAA,wBACqB8D,EAAQO,WAD7B,sBACqDP,EAAQK,KAD7D,uBAQhB,uBACA,uBACA,4B,qJCrDG,SAASU,EAAM7H,GAC1B,IADiC,EAC3B8H,EAgCV,WAA0B,IAAD,EACehF,mBAAS,CACzChE,WAAOiJ,EACPlJ,YAAQkJ,IAHS,mBACdD,EADc,KACFE,EADE,KAoBrB,OAfA9D,qBAAU,WAEN,SAAS+D,IACLD,EAAc,CACVlJ,MAAOoJ,OAAOC,WACdtJ,OAAQqJ,OAAOE,cAQvB,OAJAF,OAAOG,iBAAiB,SAAUJ,GAElCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IACIH,EApDYS,GACbC,EAAS,GAFkB,cAGb1I,KAHa,IAGjC,IAAI,EAAJ,qBAA8B,CAAC,IAAD,EAAtB+E,EAAsB,QAClBxE,EAAcJ,YAAiBD,EAAME,KAAK2E,IAA1CxE,UADkB,cAELL,EAAMyI,YAFD,IAE1B,2BAAuC,CAAC,IAA/BC,EAA8B,UAClBC,EAAUD,EAAUrI,GAA7BuI,EAD2B,EAC3BA,EAAGC,EADwB,EACxBA,EACXL,EAAO9C,KAAK,CACRkD,IACAC,IACAnH,KAAK,GAAD,OAAKmD,EAAL,cAAmB6D,GACvB/J,KAAM,UACNmK,KAAM,mBATY,gCAHG,8BAiBjC,OACI,cAAC,IAAD,CACI5I,KAAMsI,EACNO,OAAQ,CACJjK,MAAOgJ,EAAWhJ,MAAQ,GAAID,OAAQ,IAAKmK,MAAOhJ,EAAMgJ,MAAOC,MAAO,CAAED,MAAO,QAAUE,MAAO,CAAEF,MAAOhJ,EAAMmJ,SAEnHC,OAAQ,CAAEC,YAAY,KAMlC,SAASV,EAAUW,EAAOjJ,GACtB,MAAO,CAAEuI,EAAGvI,EAAUuB,KAAI,SAAAT,GAAG,OAAI,IAAIE,KAAKF,EAAI,kBAAiB0H,EAAGxI,EAAUuB,KAAI,SAAAT,GAAG,OAAIoI,OAAOpI,EAAImI,QC7BvF,SAASE,EAAT,GAAyB,IAATtJ,EAAQ,EAARA,KAC3B,OACI,sBAAKqE,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,oBAAIA,UAAU,YAAYC,MAAO,CAAEC,UAAW,UAA9C,wCAMPlD,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,qBAAsBO,MAAM,gBAAgBG,OAAO,sBAAyB,cAACzK,EAAA,EAAD,IAC3I6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,qBAAsBO,MAAM,gBAAgBG,OAAO,sBAAyB,cAACzK,EAAA,EAAD,IAC3I6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,mBAAoBO,MAAM,cAAcG,OAAO,oBAAuB,cAACzK,EAAA,EAAD,IACrI6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,oBAAqBO,MAAM,eAAeG,OAAO,qBAAwB,cAACzK,EAAA,EAAD,IACxI6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,uBAAwBO,MAAM,kBAAkBG,OAAO,wBAA2B,cAACzK,EAAA,EAAD,IACjJ6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,gCAAiCO,MAAM,2BAA2BG,OAAO,iCAAoC,cAACzK,EAAA,EAAD,IAC5K6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,6BAA8BO,MAAM,wBAAwBG,OAAO,8BAAiC,cAACzK,EAAA,EAAD,IACnK6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,uBAAwBO,MAAM,kBAAkBG,OAAO,wBAA2B,cAACzK,EAAA,EAAD,IACjJ6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,oBAAqBO,MAAM,eAAeG,OAAO,qBAAwB,cAACzK,EAAA,EAAD,IACxI6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,iCAAkCO,MAAM,4BAA4BG,OAAO,kCAAqC,cAACzK,EAAA,EAAD,IAC/K6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,uBAAwBO,MAAM,kBAAkBG,OAAO,wBAA2B,cAACzK,EAAA,EAAD,IACjJ6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,2BAA4BO,MAAM,sBAAsBG,OAAO,4BAA+B,cAACzK,EAAA,EAAD,IAC7J6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,4BAA6BO,MAAM,uBAAuBG,OAAO,6BAAgC,cAACzK,EAAA,EAAD,IAChK6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,4BAA6BO,MAAM,sBAAsBG,OAAO,6BAAgC,cAACzK,EAAA,EAAD,IAC/J6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,wBAAyBO,MAAM,kBAAkBG,OAAO,yBAA4B,cAACzK,EAAA,EAAD,IACnJ6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,8BAA+BO,MAAM,uBAAuBG,OAAO,+BAAkC,cAACzK,EAAA,EAAD,IACpK6C,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,cAACiD,EAAD,CAAO3H,KAAMA,EAAMuI,WAAY,CAAC,0BAA2BO,MAAM,mBAAmBG,OAAO,2BAA8B,cAACzK,EAAA,EAAD,IAGzJ,qBAAK8F,MAAO,CAAEE,QAAS,GAAIC,UAAW,QAAtC,SACKpD,OAAOC,KAAKtB,GAAM0E,OAAS,EAAI,mCAC/B9E,IAAU8B,KAAI,SAACiD,GAAD,OAAY,qCAAE,qBAAIN,UAAU,QAAQC,MAAO,CAAEC,UAAW,UAA1C,UAAuDI,EAAvD,cAA6E,cAAC9E,EAAA,EAAD,CAAOG,KAAMA,EAAK2E,GAAW1E,OAAQ,CAAC,aAAc,YAAa,YAAa,oBAAqB,oBAAqB,kBAAmB,sBAAuB,sBAAuB,mBAAqB,sCAClT,cAACzB,EAAA,EAAD,W","file":"static/js/main.25fcec31.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\n\nexport default function NoData() {\n    return (\n        <ReactLoading type=\"bars\" color={\"black\"} height={667} width={375} />\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\n'bootstrap-css-only/css/bootstrap.min.css'; import\n'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const fileNames = [\"data_24csv\",\"data_49csv\"]","import React, { useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport prepDataForTable from '../helperFunctions/prepDataForTable';\n\nexport default function Table(props) {\n    const {key, tableData} = prepDataForTable(props.data, props.fields)\n    console.log(props.reverse)\n    return (\n        <MDBDataTable\n            striped\n            borderless    \n            //responsive\n            small\n            scrollX\n            hover \n            sortable={false}\n            data={{\n                columns:key,\n                rows:props.reverse?tableData:[...tableData].reverse() /* I have no clue why the spread syntax makes it work but it does */\n            }}\n        />\n    )\n\n}","export default function prepDataForTable(arr, fields) {\n    // const key = arr.shift()\n    // const tableData = arr.map(row=>{\n    //     let rowObj = {}\n    //     row.forEach((rowEl, index)=>rowObj[key[index]] = rowEl)\n    //     return rowObj\n    // })\n    // return {key, tableData}\n\n    // for(let timeKey of Object.keys(arr[0]).filter(el=>el.includes(\"time\"))){\n    //     arr.forEach(row=>{\n    //         row[timeKey] = new Date(row[timeKey]).toUTCString();\n    //     })\n    // }\n    arr.forEach(row=>{\n        const timeKey = \"time (UTC)\"\n        row[timeKey] = new Date(row[timeKey]).toUTCString();\n    })\n\n    const key = Object.keys(arr[0])\n    .filter(name=>!fields?true:fields.includes(name))\n    .map(name=>({\n        label: name.split(\"_\").join(\" \").replace(\"Vb max daily\", \"Battery Voltage Max (Daily)\")\n        .replace(\"Vb min daily\", \"Battery Voltage Min (Daily)\")\n        .replace(\"Whc daily\", \"Battery Wh (Daily)\")\n        .replace(\"fault daily\", \"Fault Daily\")\n        .replace(\"alarm daily\", \"Alarm Daily\"),\n\n        field: name\n    }))\n    return {\n        tableData: arr,\n        key\n    }\n}","import React, { useState, useEffect } from 'react';\n\nimport Home from './screens/Home';\nimport FullTable from './screens/FullTable';\nimport HistoricalData from './screens/HistoricalData';\nimport NavBar from './components/NavBar';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\n\ntry {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyD2K0qINs7uoG6-2whLT8Wgab_AvAhVEzI\",\n    authDomain: \"sierra-leone-cec24.firebaseapp.com\",\n    projectId: \"sierra-leone-cec24\",\n    storageBucket: \"sierra-leone-cec24.appspot.com\",\n    messagingSenderId: \"458713135578\",\n    appId: \"1:458713135578:web:d5a3e153fa883269ace8e3\"\n  });\n} catch (err) {\n  // ignore app already initialized error\n}\nconst db = firebase.firestore();\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [firebaseTimestamp, setFirebaseTimestamp] = useState(-1);\n  const [year, setYear] = useState((new Date()).getUTCFullYear());\n\n  let update = () => {\n    console.log(\"fetching!\")\n    fetch('http://localhost:4001/logfile').then(res=>res.json()).then(data=>{\n      console.log(data)\n      setData(data)\n      if(global.firebaseListener){\n        global.firebaseListener() //unsubscribe\n        global.firebaseListener = null\n      }\n    }).catch(err=>{\n      if(global.firebaseListener == null){\n        const logFileRef = db.collection('logData').doc(\"\"+year);\n        global.firebaseListener = logFileRef.onSnapshot((doc) => {\n          setData(doc.data().data)\n          console.log(doc.data().timestamp.seconds)\n          setFirebaseTimestamp(doc.data().timestamp.seconds * 1000)\n        });\n      }\n      console.log(err)\n    })\n  }\n\n  useEffect(()=>{\n    update()\n    setInterval(update, 1000*30) // request file from web server every 30 seconds\n  }, [true])\n\n  return (\n    <Router /*basename=\"/solar-metering\"*/>\n      <NavBar firebaseTimestamp={firebaseTimestamp} year={year}/>\n\n      <Switch>\n        <Route path=\"/full-table\">\n          <FullTable data={data} />\n        </Route>\n        <Route path=\"/historical-data\">\n          <HistoricalData year={year} setYear={setYear}/>\n        </Route>\n        <Route path=\"/\">\n          <Home data={data} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport Table from '../components/Table';\nimport NoData from '../components/NoData';\nimport { MDBBtn } from 'mdbreact';\nimport { fileNames } from '../helperFunctions/globals'\n\n/** This page will contain all table data */\nexport default function FullTable({ data }) {\n    const [reverse, setReverse] = useState(false);\n    return (\n        <div className=\"App\">\n            <br/>\n            <div className=\"title_component\">\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\" style={{textAlign:\"center\"}}>Complete Solar Data from MSView</h1>\n                </header>\n            </div>\n            <br/>\n            <div style={{ padding: 15, overflowX: \"auto\" }}>\n                {Object.keys(data).length > 0 ? fileNames.map((filename)=><><h1 className=\"title\" style={{ textAlign: \"center\" }}>{filename}</h1><Table data={data[filename]} reverse={reverse}/></>) : <NoData />}\n                <div style={{textAlign:\"center\"}}>\n                    <MDBBtn gradient={reverse?\"peach\":\"purple\"} onClick={()=>setReverse(!reverse)}>Reverse Order</MDBBtn>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport Table from '../components/Table';\nimport NoData from '../components/NoData';\nimport { MDBBtn } from 'mdbreact';\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport firebase from \"firebase\";\n\n\n/** This page will contain all table data */\nexport default function HistoricalData({ year, setYear }) {\n    const [documents, setDocuments] = useState([]);\n    const [downloadLinks, setDownloadLinks] = useState({});\n\n    useEffect(()=>{\n        const db = firebase.firestore();\n        let documentsLocal = []\n        const unsubscribe = db.collection(\"logData\").get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                console.log(doc.id)\n                documentsLocal.push(doc)\n            });\n        });\n        setDocuments(documentsLocal)\n        return unsubscribe\n    },[])\n\n    \n    return (\n        <div className=\"App\">\n            <br/>\n            <div className=\"title_component\">\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\" style={{textAlign:\"center\"}}>Historical Data</h1>\n                </header>\n            </div>\n            <br/>\n            <div style={{ padding: 15, overflowX: \"auto\" }}>\n                <h2>Currently loaded data for {year}</h2>\n                <p>The site will be populated with data from {year}.</p>\n                {documents.length > 0?<>\n                    <MDBDropdown>\n                        <MDBDropdownToggle caret color=\"primary\">\n                            Load year\n                        </MDBDropdownToggle>\n                        <MDBDropdownMenu basic>\n                            {([...documents]).map(el=><MDBDropdownItem onClick={()=>setYear(el.id)}>{el.id}</MDBDropdownItem>)}\n                        </MDBDropdownMenu>\n                    </MDBDropdown>\n                    <br/><br/><br/>\n                    <h2>Download links:</h2>\n                    {([...documents]).map(el=>{\n                        if(downloadLinks[el.id] == null){\n                            (async () => {\n                                const JSONdata = el.data()\n                                const blob = new Blob([JSON.stringify(JSONdata)], {type:'application/json'})\n                                const fileDownloadUrl = URL.createObjectURL(blob)\n                                console.log(fileDownloadUrl)\n                                setDownloadLinks({...downloadLinks, [el.id]: fileDownloadUrl })\n                            })()\n                        }\n                        return (<MDBBtn disabled={downloadLinks[el.id] == null} download={el.id+\".json\"} href={downloadLinks[el.id]}>{downloadLinks[el.id] == null?\"loading...\":el.id}</MDBBtn>)\n                    })}\n                </>:<NoData/>}\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavItem, MDBNavLink } from 'mdbreact';\n\nexport default function NavBar({ firebaseTimestamp, year }) {\n    const [lastWrite, setLastWrite] = useState(null);\n\n    const checkLastWrite = ()=>{\n        fetch('http://localhost:4001/last-write').then(res=>res.json()).then(data=>{\n            console.log(`Last Write: ${data.lastWrite}`)\n            setLastWrite(data.lastWrite)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    useEffect(()=>{\n        checkLastWrite()\n        setInterval(checkLastWrite, 1000*30) // Update last write every 30 seconds\n    }, [true])\n\n    const calcDiffInTime = (timestamp) =>{\n        const diff = (new Date()) - timestamp\n        const diffInHrs = diff/(1000*60*60)\n        return {hours: Math.floor(diffInHrs % 24), days: Math.floor(diffInHrs/24), recent: diffInHrs<1, hoursFixed: (diffInHrs % 24).toFixed(2)}\n    }\n\n    let timeObj = calcDiffInTime(lastWrite != -1 && lastWrite != null? lastWrite : firebaseTimestamp)\n\n    return (\n        <>\n            <nav>\n                <MDBNavbar color=\"gray\" expand=\"md\" fixed=\"top\" scrolling style={{backgroundColor:\"white\"}}>\n                    <MDBNavbarBrand>\n                        <strong className=\"black-text\">Solar Metering</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavLink to=\"/home\">Graphs</MDBNavLink>\n                    <MDBNavLink to=\"/full-table\">Full Table</MDBNavLink>\n                    {firebaseTimestamp != -1 && <MDBNavLink to=\"/historical-data\">Historical Data {(new Date()).getUTCFullYear() != year?`(${year})`:``}</MDBNavLink>}\n                    <div className=\"ml-auto\">\n                        {lastWrite != null? \n                            lastWrite == -1? \n                                `No uploads have happened yet`\n                            :\n                                timeObj.recent?\n                                    `An upload recently took place`\n                                :\n                                    `Last upload was ${timeObj.hours} hours and ${timeObj.days} days ago`\n                        :\n                            firebaseTimestamp != -1?\n                                `Logs are from ${timeObj.hoursFixed} hours and ${timeObj.days} days ago`\n                            :\n                                ``\n                        }\n                    </div>\n                </MDBNavbar>\n            </nav>\n            <br/>\n            <br/>\n            <br/>\n        </>\n    )\n\n}","import React, { useState, useEffect } from 'react';\nimport prepDataForTable from '../helperFunctions/prepDataForTable';\nimport Plot from 'react-plotly.js';\nimport { fileNames } from '../helperFunctions/globals'\n\nexport default function Graph(props) {\n    const windowSize = useWindowSize();\n    const traces = []\n    for(let filename of fileNames){\n        const { tableData } = prepDataForTable(props.data[filename])\n        for (let category of props.categories) {\n            const { x, y } = getVsTime(category, tableData)\n            traces.push({\n                x,\n                y,\n                name: `${filename} - ${category}`,\n                type: 'scatter',\n                mode: 'lines+markers',\n                //marker: { color: category.includes(\"max\") ? 'red' : 'black' },\n            })\n        }\n    }\n    return (\n        <Plot\n            data={traces}\n            layout={{\n                width: windowSize.width - 20, height: 500, title: props.title, xaxis: { title: 'Time' }, yaxis: { title: props.yTitle }\n            }}\n            config={{ responsive: true }}\n        />\n    )\n\n}\n\nfunction getVsTime(yAxis, tableData) {\n    return { x: tableData.map(row => new Date(row[\"time (UTC)\"])), y: tableData.map(row => Number(row[yAxis/*.split(\" \").join(\"_\")*/])) }\n}\n\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}","import Table from '../components/Table';\nimport NoData from '../components/NoData';\nimport Graph from '../components/Graph';\nimport { fileNames } from '../helperFunctions/globals'\n\n/** Home page will contain output and table with most important data */\nexport default function Home({ data }) {\n    return (\n        <div className=\"App\">\n            <br/>\n            <div className=\"title_component\">\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\" style={{ textAlign: \"center\" }}>Real-Time Solar Output</h1>\n                </header>\n            </div>\n\n            {/* {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Vb min daily\", \"Vb max daily\"]} title=\"Vb Over Time\" yTitle=\"Vb Value (unit goes here)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Whc daily\"]} title=\"Whc Value\" yTitle=\"Whc Value (unit goes here)\" /> : <NoData />} */}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Array Voltage (V)\"]} title=\"Array Voltage\" yTitle=\"Array Voltage (V)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Array Current (A)\"]} title=\"Array Current\" yTitle=\"Array Current (A)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Input Power (W)\"]} title=\"Input Power\" yTitle=\"Input Power (W)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Output Power (W)\"]} title=\"Output Power\" yTitle=\"Output Power (W)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Battery Voltage (V)\"]} title=\"Battery Voltage\" yTitle=\"Battery Voltage (V)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Battery Terminal Voltage (V)\"]} title=\"Battery Terminal Voltage\" yTitle=\"Battery Terminal Voltage (V)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Battery Sense Voltage (V)\"]} title=\"Battery Sense Voltage\" yTitle=\"Battery Sense Voltage (V)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Battery Current (A)\"]} title=\"Battery Current\" yTitle=\"Battery Current (A)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Output Power (W)\"]} title=\"Output Power\" yTitle=\"Output Power (W)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Target Regulation Voltage (V)\"]} title=\"Target Regulation Voltage\" yTitle=\"Target Regulation Voltage (V)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"RTS Temperature (C)\"]} title=\"RTS Temperature\" yTitle=\"RTS Temperature (C)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Battery Temperature (C)\"]} title=\"Battery Temperature\" yTitle=\"Battery Temperature (C)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Heatsink Temperature (C)\"]} title=\"Heatsink Temperature\" yTitle=\"Heatsink Temperature (C)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Ah Charge Resetable (Ah)\"]} title=\"Ah Charge Resetable\" yTitle=\"Ah Charge Resetable (Ah)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"Ah Charge Total (Ah)\"]} title=\"Ah Charge Total\" yTitle=\"Ah Charge Total (Ah)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"kWh Charge Resetable (kWh)\"]} title=\"kWh Charge Resetable\" yTitle=\"kWh Charge Resetable (kWh)\" /> : <NoData />}\n            {Object.keys(data).length > 0 ? <Graph data={data} categories={[\"kWh Charge Total (kWh)\"]} title=\"kWh Charge Total\" yTitle=\"kWh Charge Total (kWh)\" /> : <NoData />}\n            \n\n            <div style={{ padding: 15, overflowX: \"auto\" }}>\n                {Object.keys(data).length > 0 ? <>\n                {fileNames.map((filename)=><><h1 className=\"title\" style={{ textAlign: \"center\" }}>{filename} Summary</h1><Table data={data[filename]} fields={[\"time (UTC)\", \"Alarms ()\", \"Faults ()\", \"Array Voltage (V)\", \"Array Current (A)\", \"Input Power (W)\", \"Battery Voltage (V)\", \"Battery Current (A)\", \"Output Power (W)\",  \"Heatsink Temperature (C)\"]} /></>)}\n                </> : <NoData />}\n            </div>\n        </div>\n    );\n}\n\n"],"sourceRoot":""}